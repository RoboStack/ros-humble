ament_package:
  add_host: ["importlib_resources"]
foxglove_bridge:
  add_host: ["ros-humble-ament-cmake"]
ros_ign_interfaces:
  add_host: ["ros-humble-rcl-interfaces"]
cartographer_ros:
  add_host: ["cartographer 2.*", "libboost-devel"]
libyaml_vendor:
  add_host: ["yaml-cpp", "yaml"]
  add_run: ["yaml-cpp", "yaml"]
yaml_cpp_vendor:
  add_host: ["yaml-cpp"]
  add_run: ["yaml-cpp"]
zstd_vendor:
  add_host: ["zstd", "${{ 'zstd-static' if not win }}"]
  add_run: ["zstd"]
sqlite3_vendor:
  add_host: ["sqlite"]
  add_run: ["sqlite"]
foonathan_memory_vendor:
  add_host: ["foonathan-memory"]
  add_run: ["foonathan-memory"]
rviz_assimp_vendor:
  add_host: ["assimp"]
  add_run: ["assimp"]
sdl2_vendor:
  add_host: ["sdl2"]
  add_run: ["sdl2"]
libcurl_vendor:
  add_host: ["libcurl"]
  add_run: ["libcurl"]
intra_process_demo:
  add_host: ["REQUIRE_OPENGL"]
  # Depends on opencv with gui support, see https://github.com/ros2/demos/blob/8f361a1ece2daae54016959f3ea9ab2e7692ddbb/intra_process_demo/include/image_pipeline/image_view_node.hpp#L58
  add_run: ["libopencv * *qt6*"]
rviz_ogre_vendor:
  add_host: ["zlib", "freeimage", "freetype", "assimp", "zziplib", "pugixml", "${{ 'libglu' if linux }}"]
  add_build: ["vcstool"]
  add_run: ["assimp"]
pcl_conversions:
  add_host: ["REQUIRE_OPENGL", "libboost-devel"]
pcl_ros:
  add_host: ["REQUIRE_OPENGL", "libboost-devel"]
rviz_rendering:
  add_host: ["glew"]
behaviortree_cpp_v3:
  add_host: ["libboost-devel", "cppzmq"]
  add_run: ["libboost"]
behaviortree_cpp:
  add_host: ["libboost-devel", "cppzmq", "zeromq", "sqlite"]
  add_run: ["libboost"]
plotjuggler:
  add_host: ["libxcb", "${{ 'elfutils' if linux }}", "ros-humble-ros-workspace", "git-lfs"]
embree_vendor:
  add_host: ["REQUIRE_OPENGL", "libpng", "libjpeg-turbo", "openimageio", "tbb", "tbb-devel", "embree"]
ign_rviz_common:
  add_host: ["REQUIRE_OPENGL"]
ign_rviz:
  add_host: ["REQUIRE_OPENGL"]
ign_rviz_plugins:
  add_host: ["REQUIRE_OPENGL"]
image_view:
  add_host: ["REQUIRE_OPENGL"]
  # Depends on opencv with gui support, see  https://github.com/ros-perception/image_pipeline/blob/746268fcfd21b389bc39ae60bb6345a53c838558/image_view/src/stereo_view_node.cpp#L253
  add_run: ["libopencv * *qt6*"]
nao_lola:
  add_host: ["libboost-devel"]
ros_ign_gazebo:
  add_host: ["ros-humble-std-msgs", "ros-humble-rclcpp", "REQUIRE_OPENGL"]
ros_ign_gazebo_demos:
  add_host: ["REQUIRE_OPENGL"]
rosbag2_bag_v2_plugins:
  add_host: ["ros-noetic-roscpp"]
tvm_vendor:
  add_host: ["libblas", "openblas", "libcblas"]
libphidget22:
  add_host: ["libusb"]
libg2o:
  add_host: ["qt-main", "${{ 'libglu' if linux }}", "${{ 'freeglut' if not osx }}"]
fmilibrary_vendor:
  add_host: ["fmilib"]
mrpt2:
  add_host:  ["assimp", "octomap", "tinyxml2", "libboost-devel", "jsoncpp", "gtest", "libboost-python-devel", "libdc1394", "xorg-libxcomposite", "libftdi", "ros-humble-octomap"]
  add_run:   ["assimp", "octomap", "tinyxml2", "libboost-devel", "jsoncpp", "gtest", "libboost-python-devel", "libdc1394", "xorg-libxcomposite", "libftdi", "ros-humble-octomap"]
  add_build: ["${{ cdt('libxcomposite-devel') if linux }}"]
ros1_rosbag_storage_vendor:
  add_host: ["ros-noetic-roscpp", "ros-noetic-roslz4", "ros-noetic-rostest"]
  add_run: ["ros-noetic-roscpp", "ros-noetic-roslz4"]
popf:
  add_host: ["perl"]
rtabmap:
  add_host: ["REQUIRE_OPENGL", "ceres-solver", "libdc1394", "libusb", "vtk"]
backward_ros:
  # binutils is added only on linux to avoid the -liberty library not found in macos
  # see https://github.com/RoboStack/ros-jazzy/pull/95#issuecomment-3113166166
  add_host: ["${{ 'binutils' if linux }}", "${{ 'elfutils' if linux }}", "ros-humble-ament-cmake-libraries"]
nav2_smac_planner:
  add_build: ["${{ 'llvm-openmp' if osx }}"]
  add_host: ["${{ 'llvm-openmp' if osx }}", "ompl", "libode"]
nav2_util:
  add_host: ["libboost-devel"]
nav2_constrained_smoother:
  add_host: ["${{ 'openblas' if win }}"]
nav2_mppi_controller:
  add_build: ["${{ 'clang <19' if osx }}"]
ompl:
  add_host: ["ompl"]
pybind11_vendor:
  add_host: ["pybind11"]
  add_run: ["pybind11"]
pybind11_json_vendor:
  add_host: ["pybind11_json"]
  add_run: ["pybind11_json"]
python_qt_binding:
  add_host: ["pyqt-builder"]
  add_run: ["pyqt-builder"]
qt_gui_cpp:
  add_build: ["${{ 'pyqt' if (build_platform != target_platform) }}", "${{ 'qt-main' if (build_platform != target_platform) }}"]
  add_host: ["REQUIRE_OPENGL", "pyqt-builder", "pep517", "pyside2"]
  add_run: ["pyqt-builder", "pep517"]
rqt_gui_cpp:
  add_host: ["REQUIRE_OPENGL"]
ur_moveit_config:
  add_host: ["ros-humble-rclpy"]
  add_run: ["ros-humble-rclpy"]
gscam:
  add_host: ["glib"]
dolly_ignition:
  add_host: ["REQUIRE_OPENGL"]
google_benchmark_vendor:
  add_host: ["benchmark"]
  add_run: ["benchmark"]
rqt_image_view:
  add_host: ["REQUIRE_OPENGL"]
rqt_image_overlay_layer:
  add_host: ["REQUIRE_OPENGL"]
rviz_visual_testing_framework:
  add_host: ["REQUIRE_OPENGL"]
rviz2:
  add_host: ["REQUIRE_OPENGL"]
plotjuggler_ros:
  add_host: ["REQUIRE_OPENGL"]
moveit_setup_framework:
  add_host: ["REQUIRE_OPENGL"]
moveit_setup_core_plugins:
  add_host: ["REQUIRE_OPENGL"]
moveit_setup_controllers:
  add_host: ["REQUIRE_OPENGL"]
moveit_setup_app_plugins:
  add_host: ["REQUIRE_OPENGL"]
moveit_setup_srdf_plugins:
  add_host: ["REQUIRE_OPENGL"]
moveit_setup_assistant:
  add_host: ["REQUIRE_OPENGL"]
moveit:
  add_host: ["REQUIRE_OPENGL"]
moveit_visual_tools:
  add_host: ["REQUIRE_OPENGL"]
force_torque_sensor_broadcaster:
  add_host: ["typeguard", "jinja2"]
ros_gz_sim:
  add_host: ["REQUIRE_OPENGL"]
geometric_shapes:
  add_host: ["libboost-devel", "octomap"]
ros_image_to_qimage:
  add_host: ["REQUIRE_OPENGL"]
rqt_image_overlay:
  add_host: ["REQUIRE_OPENGL"]
tracetools:
  remove_host: [ "pkg-config" ]
spdlog_vendor:
  add_host: ["spdlog"]
  add_run: ["spdlog"]
rcl_logging_spdlog:
  add_host: ["${{ 'fmt' if emscripten }}"]
rcl:
  add_host: [ "ros-humble-yaml-cpp-vendor", "${{ 'fmt' if emscripten }}"]
libstatistics_collector:
  add_host: [ "ros-humble-yaml-cpp-vendor", "${{ 'fmt' if emscripten }}"]
rcl_action:
  add_host: [ "ros-humble-yaml-cpp-vendor", "${{ 'fmt' if emscripten }}"]
rclc:
  add_host: [ "ros-humble-yaml-cpp-vendor", "${{ 'fmt' if emscripten }}"]
rclcpp:
  add_host: [ "ros-humble-yaml-cpp-vendor", "${{ 'fmt' if emscripten }}"]
rclcpp_action:
  add_host: [ "ros-humble-yaml-cpp-vendor", "${{ 'fmt' if emscripten }}"]
examples_rclcpp_minimal_subscriber:
  add_host:
    - if: (target_platform == 'emscripten-wasm32')
      then:
        - ros-humble-rmw-wasm-cpp
examples_rclcpp_minimal_publisher:
  add_host:
    - if: (target_platform == 'emscripten-wasm32')
      then:
        - ros-humble-rmw-wasm-cpp
rclcpp_components:
  add_host:
    - if: (target_platform == 'emscripten-wasm32')
      then:
        - ros-humble-rmw-wasm-cpp
rmw_implementation:
  add_run:
    - if: (target_platform == 'emscripten-wasm32')
      then:
        - ros-humble-rmw-wasm-cpp
  add_host:
    - if: (target_platform == 'emscripten-wasm32')
      then:
        - ros-humble-rmw-wasm-cpp
    - "ros-humble-yaml-cpp-vendor"
    - "fmt"
slam_toolbox:
  add_build: ["${{ 'qt-main' if (build_platform != target_platform) }}"]
  add_host: ["REQUIRE_OPENGL"]
vision_msgs_rviz_plugins:
  add_build: ["${{ 'qt-main' if (build_platform != target_platform) }}"]
  add_host: ["REQUIRE_OPENGL"]
velodyne_pointcloud:
  add_host: ["libboost-devel"]
uncrustify_vendor:
  add_host: ["uncrustify"]
  add_run: ["uncrustify"]
mimick_vendor:
  add_build: ["vcstool"]
rosx_introspection:
  add_host: ["rapidjson"]
octomap_ros:
  add_host: ["octomap"]
octomap_rviz_plugins:
  add_host: ["octomap"]
zenoh_cpp_vendor:
  add_host: ["libzenohc", "libzenohcxx"]
rmw_zenoh_cpp:
  add_host: ["libzenohc", "libzenohcxx"]
openvdb_vendor:
  add_host: ["openvdb"]
spatio_temporal_voxel_layer:
  add_host: ["REQUIRE_OPENGL"]
console_bridge_vendor:
  add_host: ["console_bridge"]
  add_run: ["console_bridge"]
ignition_cmake2_vendor:
  add_host: ["libignition-cmake2"]
  add_run: ["libignition-cmake2"]
ignition_math6_vendor:
  add_host: ["libignition-math6"]
  add_run: ["libignition-math6"]
rclpy:
  add_host: ["typing_extensions"]
  add_run: ["typing_extensions"]
image_tools:
  # Depends on opencv with gui support, see https://github.com/ros2/demos/blob/8f361a1ece2daae54016959f3ea9ab2e7692ddbb/image_tools/src/showimage.cpp#L190
  add_run: ["libopencv * *qt6*"] 
camera_calibration:
  # Depends on opencv with gui support, see https://github.com/ros-perception/image_pipeline/blob/746268fcfd21b389bc39ae60bb6345a53c838558/camera_calibration/src/camera_calibration/camera_calibrator.py#L286
  add_run: ["libopencv * *qt6*"]
gazebo_ros:
  add_host: ["REQUIRE_OPENGL"]
wasm_cpp:
  add_run: ["${{ 'fmt' if emscripten }}", "${{ 'sqlite' if emscripten }}", "${{ 'bzip2' if emscripten }}", "${{ 'zlib' if emscripten }}", "${{ 'libffi' if emscripten }}"]
aws_sdk_cpp_vendor:
  add_host: ["aws-sdk-cpp"]
  add_run: ["aws-sdk-cpp"]
polygon_rviz_plugins:
  add_host: ["libgl-devel"]
  add_run: ["libgl-devel"]
